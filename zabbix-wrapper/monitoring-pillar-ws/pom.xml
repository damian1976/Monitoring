<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>it.reply</groupId>
		<artifactId>monitoring-pillar</artifactId>
		<version>1.9.0-SNAPSHOT</version>
	</parent>

	<artifactId>monitoring-pillar-ws</artifactId>
	<packaging>war</packaging>

	<name>Monitoring Pillar - Web Services module</name>

	<dependencies>
		<!-- TODO remove after completed the module structure and tested ! -->

		<!-- JBoss provided Java EE 6.0 API -->
		<dependency>
			<groupId>org.jboss.spec</groupId>
			<artifactId>jboss-javaee-6.0</artifactId>
			<version>3.0.2.Final</version>
			<type>pom</type>
			<scope>provided</scope>
		</dependency>

		<!-- First declare the APIs we depend on and need for compilation. All 
			of them are provided by JBoss AS 7 -->
		<!-- Import the CDI API, we use provided scope as the API is included in 
			JBoss AS 7 -->
		<dependency>
			<groupId>javax.enterprise</groupId>
			<artifactId>cdi-api</artifactId>
			<scope>provided</scope>
		</dependency>

		<!-- Import the Common Annotations API (JSR-250), we use provided scope 
			as the API is included in JBoss AS 7 -->
		<dependency>
			<groupId>org.jboss.spec.javax.annotation</groupId>
			<artifactId>jboss-annotations-api_1.1_spec</artifactId>
			<scope>provided</scope>
		</dependency>

		<!-- Import the JPA API, we use provided scope as the API is included in 
			JBoss AS 7 -->
		<dependency>
			<groupId>org.hibernate.javax.persistence</groupId>
			<artifactId>hibernate-jpa-2.0-api</artifactId>
			<scope>provided</scope>
		</dependency>

		<!-- Import the JAX-RS API, we use provided scope as the API is included 
			in JBoss AS 7 -->
		<dependency>
			<groupId>org.jboss.spec.javax.ws.rs</groupId>
			<artifactId>jboss-jaxrs-api_1.1_spec</artifactId>
			<scope>provided</scope>
		</dependency>

		<!-- Import the EJB API, we use provided scope as the API is included in 
			JBoss AS 7 -->
		<dependency>
			<groupId>org.jboss.spec.javax.ejb</groupId>
			<artifactId>jboss-ejb-api_3.1_spec</artifactId>
			<scope>provided</scope>
		</dependency>

		<!-- Import the JSF API, we use provided scope as the API is included in 
			JBoss AS 7 -->
		<dependency>
			<groupId>org.jboss.spec.javax.faces</groupId>
			<artifactId>jboss-jsf-api_2.1_spec</artifactId>
			<scope>provided</scope>
		</dependency>

		<!-- Needed for running tests (you may also use TestNG) -->
		<!-- <dependency> <groupId>junit</groupId> <artifactId>junit</artifactId> 
			<scope>test</scope> </dependency> -->

		<!-- Arquillian allows you to test enterprise code such as EJBs and Transactional 
			(JTA) JPA from JUnit/TestNG -->
		<!-- <dependency> <groupId>org.jboss.arquillian.junit</groupId> <artifactId>arquillian-junit-container</artifactId> 
			<version>1.1.11.Final</version> <scope>test</scope> </dependency> -->

		<!-- Google Guava Libs -->
		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
		</dependency>

		<!-- Apache libs -->
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-io</artifactId>
			<version>1.3.2</version>
		</dependency>

		<!-- ShrinkWrap Maven Resolver for Arquillian Tests -->
		<!-- <dependency> <groupId>org.jboss.shrinkwrap.resolver</groupId> <artifactId>shrinkwrap-resolver-impl-maven</artifactId> 
			<scope>test</scope> <exclusions> <exclusion> <groupId>com.google.collections</groupId> 
			<artifactId>google-collections</artifactId> </exclusion> </exclusions> </dependency> -->

		<!-- Resteasy -->
		<dependency>
			<groupId>org.jboss.resteasy</groupId>
			<artifactId>resteasy-jaxrs</artifactId>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>org.jboss.resteasy</groupId>
			<artifactId>jaxrs-api</artifactId>
			<scope>provided</scope>
		</dependency>

		<!-- Jackson 2 Provider -->
		<!-- To force JBoss's RestEasy to use the newer version of Jackson -->
		<dependency>
			<groupId>org.jboss.resteasy</groupId>
			<artifactId>resteasy-jackson2-provider</artifactId>
			<scope>provided</scope>
		</dependency>

		<!-- <dependency> -->
		<!-- <groupId>org.jboss.resteasy</groupId> -->
		<!-- <artifactId>resteasy-validator-provider-11</artifactId> -->
		<!-- </dependency> -->

		<!-- Multipart Provider for Resteasy client -->
		<dependency>
			<groupId>org.jboss.resteasy</groupId>
			<artifactId>resteasy-client</artifactId>
		</dependency>

		<dependency>
			<groupId>org.jboss.resteasy</groupId>
			<artifactId>resteasy-jaxb-provider</artifactId>
		</dependency>

		<dependency>
			<groupId>org.jboss.resteasy</groupId>
			<artifactId>resteasy-multipart-provider</artifactId>
		</dependency>

		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpmime</artifactId>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>org.javatuples</groupId>
			<artifactId>javatuples</artifactId>
		</dependency>

		<!-- Logging (slf4j with log4j2) -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
		</dependency>
		<!-- Binding for Log4J -->
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-slf4j-impl</artifactId>
		</dependency>
		<!-- Log4J 2 -->
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-api</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-core</artifactId>
		</dependency>
		<!-- Log4J Legacy -->
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
		</dependency>

		<!-- Fix to avoid export of the library (which conflicts with the one on 
			JBoss AS 7.1.1.Final) -->
		<dependency>
			<groupId>dom4j</groupId>
			<artifactId>dom4j</artifactId>
			<optional>true</optional>
		</dependency>


		<!-- JBoss Weld -->
		<dependency>
			<groupId>org.jboss.weld</groupId>
			<artifactId>weld-core</artifactId>
		</dependency>
		<dependency>
			<groupId>org.jboss.weld</groupId>
			<artifactId>weld-api</artifactId>
		</dependency>
		<dependency>
			<groupId>org.jboss.weld</groupId>
			<artifactId>weld-core-impl</artifactId>
		</dependency>

		<!-- Commons -->

		<dependency>
			<groupId>commons-collections</groupId>
			<artifactId>commons-collections</artifactId>
		</dependency>

		<dependency>
			<groupId>commons-configuration</groupId>
			<artifactId>commons-configuration</artifactId>
		</dependency>

		<dependency>
			<groupId>commons-lang</groupId>
			<artifactId>commons-lang</artifactId>
		</dependency>

		<dependency>
			<groupId>commons-logging</groupId>
			<artifactId>commons-logging</artifactId>
		</dependency>

		<dependency>
			<groupId>joda-time</groupId>
			<artifactId>joda-time</artifactId>
		</dependency>

		<!-- Reply dependencies -->
		<dependency>
			<groupId>it.reply</groupId>
			<artifactId>reply-commons</artifactId>
		</dependency>

		<!-- Monitoring Pillar dependencies -->
		<dependency>
			<groupId>it.reply</groupId>
			<artifactId>monitoring-pillar-biz</artifactId>
		</dependency>
	</dependencies>

	<profiles>
		<!-- Deploy to the local RUNNING JBoss application server -->
		<profile>
			<id>deploy-local</id>

			<build>
				<plugins>
					<plugin>
						<groupId>org.jboss.as.plugins</groupId>
						<artifactId>jboss-as-maven-plugin</artifactId>
						<executions>
							<execution>
								<phase>install</phase>
								<!-- Tries to undeploy first, the deploys later -->
								<!-- IMPORTANT: the deployment name is set in the configuration.name 
									property ! -->
								<goals>
									<goal>undeploy</goal>
									<goal>deploy</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>

		<profile>
			<id>undeploy-local</id>

			<build>
				<plugins>
					<plugin>
						<groupId>org.jboss.as.plugins</groupId>
						<artifactId>jboss-as-maven-plugin</artifactId>
						<executions>
							<execution>
								<phase>clean</phase>
								<goals>
									<goal>undeploy</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

	<build>
		<!-- ${environment.name} suffix is to make visible that the archive contains 
			injected configurations environment-dependent -->
		<finalName>monitoring-pillar${finalname.suffix}${environment.name}</finalName>

		<plugins>
			<!-- Settings to deploy to the local RUNNING JBoss application server -->
			<plugin>
				<groupId>org.jboss.as.plugins</groupId>
				<artifactId>jboss-as-maven-plugin</artifactId>
				<configuration>
					<filename>${project.build.finalName}.${project.packaging}</filename>
					<!-- The name MUST end with a valid deployment extension -->
					<name>monitoring-pillar.${project.packaging}</name>
				</configuration>
			</plugin>

			<plugin>
				<artifactId>maven-war-plugin</artifactId>
			</plugin>
		</plugins>
	</build>

</project>